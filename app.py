"""
Production Optimization Dashboard

Author: [Lucas Barbosa]
GitHub: [https://github.com/lucasolisouza]
Last Modified: [2025-05-07]

Streamlit application for visualizing production optimization results using Linear Programming.
"""

import streamlit as st
from optimization import optimize_production 

# Configure page settings
st.set_page_config(
    page_title="Production Optimizer",
    page_icon="ðŸ“Š",
    layout="centered",
    initial_sidebar_state="expanded"
)

# Application title and description
st.title("Production Optimization with Linear Programming")
st.markdown("""
Adjust the parameters below to calculate the optimal production mix between Product A and Product B.
The model will maximize profit while respecting resource constraints.
""")

# User input section
st.header("Production Parameters")

# Create two columns for better layout
col1, col2 = st.columns(2)

with col1:
    profit_a = st.number_input(
        "Profit per unit of Product A (R$)",
        min_value=0,
        value=40,
        step=1,
        help="Enter the profit generated by each unit of Product A"
    )
    
    machine_time = st.number_input(
        "Total available machine time (hours)",
        min_value=1,
        value=100,
        step=1,
        help="Total hours available on the production line"
    )

with col2:
    profit_b = st.number_input(
        "Profit per unit of Product B (R$)",
        min_value=0,
        value=30,
        step=1,
        help="Enter the profit generated by each unit of Product B"
    )
    
    raw_material = st.number_input(
        "Total available raw material (kg)",
        min_value=1,
        value=120,
        step=1,
        help="Total kilograms of raw material available"
    )

# Optimization button
if st.button("Run Optimization", type="primary"):
    with st.spinner("Calculating optimal production mix..."):
        result = optimize_production(
            profit_a=profit_a,
            profit_b=profit_b,
            machine_time=machine_time,
            raw_material=raw_material
        )

    # Display results
    st.divider()
    st.subheader("Optimization Results")
    st.write(f"**Solver Status:** {result['status']}")
    
    if result["status"] == "Optimal":
        st.metric(label="Product A (units)", value=int(result['product_a']))
        st.metric(label="Product B (units)", value=int(result['product_b']))
        st.success(f"**Maximum Profit:** R$ {result['max_profit']:,.2f}")
        
        # Show resource utilization
        st.subheader("Resource Utilization")
        used_machine_time = 2 * result['product_a'] + result['product_b']
        used_raw_material = 3 * result['product_a'] + 2 * result['product_b']
        
        col1, col2 = st.columns(2)
        col1.metric(
            "Machine Time Used",
            f"{used_machine_time} hours",
            delta=f"{used_machine_time/machine_time:.1%} utilization"
        )
        col2.metric(
            "Raw Material Used",
            f"{used_raw_material} kg",
            delta=f"{used_raw_material/raw_material:.1%} utilization"
        )
    else:
        st.error("No feasible solution found with the given parameters.")
        st.info("Try adjusting your constraints or increasing available resources.")

# Add footer
st.divider()
st.caption("""
Production Optimization Dashboard Â© 2025 | 
Using Linear Programming with PuLP | 
[GitHub Repository](https://github.com/lucasolisouza)
""")